// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kendoTest.Data;

#nullable disable

namespace kendoTest.Migrations
{
    [DbContext(typeof(Report404Context))]
    [Migration("20231215112717_LastMigration")]
    partial class LastMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kendoTest.Models.AcceptedByModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfAcceptance")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AcceptedByModel");
                });

            modelBuilder.Entity("kendoTest.Models.PreparedByModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfPreperation")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PreparedByModel");
                });

            modelBuilder.Entity("kendoTest.Models.RecommendedByModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfRecomendateion")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RecommendedByModel");
                });

            modelBuilder.Entity("kendoTest.Models.Report404Model", b =>
                {
                    b.Property<long>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReportId"));

                    b.Property<int?>("AcceptedById")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ExpenditureClaimFormNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<string>("OfficeCodeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrepareredById")
                        .HasColumnType("int");

                    b.Property<int?>("RecomendedById")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("AcceptedById");

                    b.HasIndex("PrepareredById");

                    b.HasIndex("RecomendedById");

                    b.ToTable("Report404Models");
                });

            modelBuilder.Entity("kendoTest.Models.Report404ModelSubField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Akin_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ReportId")
                        .HasColumnType("bigint");

                    b.Property<long>("SN")
                        .HasColumnType("bigint");

                    b.Property<string>("Specificatin_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Total")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("Report404SubForms");
                });

            modelBuilder.Entity("kendoTest.Models.Report404Model", b =>
                {
                    b.HasOne("kendoTest.Models.AcceptedByModel", "AcceptedBy")
                        .WithMany()
                        .HasForeignKey("AcceptedById");

                    b.HasOne("kendoTest.Models.PreparedByModel", "PrepareredBy")
                        .WithMany()
                        .HasForeignKey("PrepareredById");

                    b.HasOne("kendoTest.Models.RecommendedByModel", "RecomendedBy")
                        .WithMany()
                        .HasForeignKey("RecomendedById");

                    b.Navigation("AcceptedBy");

                    b.Navigation("PrepareredBy");

                    b.Navigation("RecomendedBy");
                });

            modelBuilder.Entity("kendoTest.Models.Report404ModelSubField", b =>
                {
                    b.HasOne("kendoTest.Models.Report404Model", "Report404Model")
                        .WithMany("SubForms")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report404Model");
                });

            modelBuilder.Entity("kendoTest.Models.Report404Model", b =>
                {
                    b.Navigation("SubForms");
                });
#pragma warning restore 612, 618
        }
    }
}
